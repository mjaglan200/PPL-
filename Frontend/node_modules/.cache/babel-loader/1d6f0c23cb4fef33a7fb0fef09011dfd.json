{"ast":null,"code":"var _jsxFileName = \"/home/ravi/Documents/ppl/Frontend/src/Component/Timeline/RightTimeline/UploadTimeline.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UploadTimeline(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  // function UploadTimeline() {\n  const [name, setname] = useState(\"\");\n  const [image, setimage] = useState();\n  const [Description, setDescription] = useState(\"\");\n  const [Daate, setDaate] = useState(\"\");\n  const [dataReceived, setdataReceived] = useState({});\n  const [Form, setForm] = useState(\"\");\n  const [post, setPost] = useState([]);\n  const fun = props.setTrue;\n\n  let submitbtn = e => {\n    _s();\n\n    const dat = new Date().toLocaleString();\n    setDaate(dat);\n    console.log(dat); // console.log(post);\n\n    e.preventDefault();\n    const {\n      id\n    } = useParams();\n    console.log(id);\n    console.log(name);\n    console.log(Description); //send image to backend node \n\n    const data = new FormData();\n    data.append(\"name\", name);\n    data.append(\"image\", image);\n    data.append(\"Description\", Description);\n    data.append(\"Daate\", Daate);\n    axios.post(\"http://localhost:4444/Timeline\", data).then(response => {\n      fun(true);\n      setdataReceived(response);\n    });\n  }; //Get AXIOS CALL FETCH IMAGE DETAILS\n\n\n  _s(submitbtn, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", true);\n\n  const createform = () => {\n    setForm(true);\n  };\n\n  const hideform = () => {\n    setForm(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rght_btn\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"rght_btn_icon\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/btn_iconb.png\",\n          alt: \"up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"btn_sep\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/btn_sep.png\",\n          alt: \"sep\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        onClick: createform,\n        children: \"Upload Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this), Form ? /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"/Timeline\",\n      method: \"post\",\n      enctype: \"multipart/form-data\",\n      onSubmit: submitbtn,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), \"NAME:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        onChange: e => {\n          setname(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this), \"Description:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"desc\",\n        name: \"desc\",\n        onChange: e => {\n          setDescription(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file\",\n        name: \"image\",\n        onChange: e => {\n          setimage(e.target.files[0]);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"image\",\n        type: \"submit\",\n        onClick: submitbtn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }, this), Form ? /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"done\",\n        type: \"submit\",\n        value: \"Done\",\n        onClick: hideform\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 14\n      }, this) : true]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }, this) : false, /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: dataReceived.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n}\n\n_s2(UploadTimeline, \"Nm0W6o6bqszkGR2lDB3NMl/4SN0=\");\n\n_c = UploadTimeline;\nexport default UploadTimeline;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadTimeline\");","map":{"version":3,"sources":["/home/ravi/Documents/ppl/Frontend/src/Component/Timeline/RightTimeline/UploadTimeline.js"],"names":["React","useState","useEffect","axios","UploadTimeline","props","name","setname","image","setimage","Description","setDescription","Daate","setDaate","dataReceived","setdataReceived","Form","setForm","post","setPost","fun","setTrue","submitbtn","e","dat","Date","toLocaleString","console","log","preventDefault","id","useParams","data","FormData","append","then","response","createform","hideform","target","value","files"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n\nfunction UploadTimeline(props) {\n\t// function UploadTimeline() {\n\t\tconst [name, setname] = useState(\"\");\n\t\tconst [image, setimage] = useState();\n\t\tconst [Description,setDescription] = useState(\"\")\n\t\tconst [Daate,setDaate] = useState(\"\")\n\t\tconst [dataReceived, setdataReceived] = useState({});\n\t\tconst [Form, setForm] = useState(\"\");\n\t\tconst [post,setPost] = useState([])\n\t\tconst fun = props.setTrue;\n\t\t\n\tlet submitbtn = e => {\n\t\tconst dat=new Date().toLocaleString()\n\t\tsetDaate(dat)\n\t\tconsole.log(dat) \n\t\t// console.log(post);\n\t\te.preventDefault();\n\t\tconst { id } = useParams()\n    console.log(id)\n\n\n\t\t\n\t\nconsole.log(name)\nconsole.log(Description)\n\n\n\t//send image to backend node \n\t\tconst data = new FormData();\n\t\tdata.append(\"name\", name);\n\t\tdata.append(\"image\", image);\n\t\tdata.append(\"Description\", Description);\n\t\tdata.append(\"Daate\",Daate)\n\n\t\taxios.post(\"http://localhost:4444/Timeline\", data).then(response => {\n\t\tfun(true);\n\t\tsetdataReceived(response);\n\t\t\t\n\t\t\t\n\n\t\t});\t\n\t\t\t\t};\n\n\t\n\t//Get AXIOS CALL FETCH IMAGE DETAILS\n\n\n\n\n\tconst createform = () => {\n\t\tsetForm(true);\n\t\t\n\t\t};\n\n\tconst hideform = () => {\n\t\tsetForm(false);\n\t\t}\n\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='rght_btn'>\n\t\t\t\t<span className='rght_btn_icon'>\n\t\t\t\t\t<img src='/images/btn_iconb.png' alt='up' />\n\t\t\t\t</span>\n\t\t\t\t<span className='btn_sep'>\n\t\t\t\t\t<img src='/images/btn_sep.png' alt='sep' />\n\t\t\t\t</span>\n\n\t\t\t\t<a href='#' onClick={createform}>\n\t\t\t\t\tUpload Post\n\t\t\t\t</a>\n\t\t\n\t\t\t</div>\n\t\t\t\n\t\t\t{Form ?(\n\t\t\t<form action='/Timeline' method='post' enctype='multipart/form-data' onSubmit={submitbtn}>\n\t\t\t\t<label />\n\t\t\t\tNAME:\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tid='name'\n\t\t\t\t\tname='name'\n\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\n\t\t\t\t\t\tsetname(e.target.value);\n\t\t\t\t\t}}\n\n\t\t\t\t\t\n\t\t\t\t/><br/>\n\n\t\t\t\t<label />\n\t\t\t\tDescription:\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tid='desc'\n\t\t\t\t\tname='desc'\n\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\n\t\t\t\t\t\tsetDescription(e.target.value);\n\t\t\t\t\t}}\n\n\t\t\t\t\t\n\t\t\t\t/><br/>\n\t\t\t\t\n\t\t\t\t<input\n\t\t\t\t\ttype='file'\n\t\t\t\t\tid='file'\n\t\t\t\t\tname='image'\n\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\tsetimage(e.target.files[0]);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<input name='image' type='submit'  onClick={submitbtn}  />\n\t\t\t\t {Form ?(<input name=\"done\" type=\"submit\" value=\"Done\" onClick={hideform} />):(true)}\n\t\t\t\t{/* <input name='image' type='submit' onClick={submitbtn} /> */}\n\t\t\t</form>)\n\t\t\t:(false )}\n\n\t\t\t<h1>{dataReceived.data}</h1>\n\t\t\t\n\t\t\t{/* <h1>{console.log(name)}</h1> */}\n\t\t</div>\n\t);\n}\n\nexport default UploadTimeline;\n"]},"metadata":{},"sourceType":"module"}